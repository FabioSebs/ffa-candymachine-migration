[{"C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\index.tsx":"1","C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\reportWebVitals.ts":"2","C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\App.tsx":"3","C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\connection.tsx":"4","C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\Home.tsx":"5","C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\candy-machine.ts":"6","C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\utils.ts":"7","C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\MintCountdown.tsx":"8","C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\MintButton.tsx":"9","C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\components\\navbar.js":"10","C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\components\\team.js":"11","C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\components\\aboutUs.js":"12","C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\components\\roadMap.js":"13","C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\components\\faq.js":"14","C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\components\\hero.js":"15","C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\components\\footer.js":"16","C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\components\\sanityClient.js":"17","C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\components\\bouncyDiscLogo.js":"18","C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\reducers\\time.js":"19"},{"size":616,"mtime":1651233904866,"results":"20","hashOfConfig":"21"},{"size":440,"mtime":1650356326277,"results":"22","hashOfConfig":"21"},{"size":2705,"mtime":1651393093792,"results":"23","hashOfConfig":"21"},{"size":15562,"mtime":1650578639285,"results":"24","hashOfConfig":"21"},{"size":23840,"mtime":1651390682247,"results":"25","hashOfConfig":"21"},{"size":18312,"mtime":1650578434790,"results":"26","hashOfConfig":"21"},{"size":3361,"mtime":1650356326278,"results":"27","hashOfConfig":"21"},{"size":2827,"mtime":1650356326272,"results":"28","hashOfConfig":"21"},{"size":5117,"mtime":1650356326271,"results":"29","hashOfConfig":"21"},{"size":4143,"mtime":1650423101199,"results":"30","hashOfConfig":"21"},{"size":5207,"mtime":1651050891058,"results":"31","hashOfConfig":"21"},{"size":3854,"mtime":1650423067416,"results":"32","hashOfConfig":"21"},{"size":8127,"mtime":1651050934624,"results":"33","hashOfConfig":"21"},{"size":3115,"mtime":1650423082541,"results":"34","hashOfConfig":"21"},{"size":5097,"mtime":1651586103141,"results":"35","hashOfConfig":"21"},{"size":3786,"mtime":1651050819751,"results":"36","hashOfConfig":"21"},{"size":244,"mtime":1651047649665,"results":"37","hashOfConfig":"21"},{"size":701,"mtime":1651235182576,"results":"38","hashOfConfig":"21"},{"size":375,"mtime":1651270022302,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1dxeg9i",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"63"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"63"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"63"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"63"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\index.tsx",[],["89","90"],"C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\reportWebVitals.ts",[],"C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\App.tsx",[],"C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\connection.tsx",[],"C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\Home.tsx",["91","92","93"],"import { useEffect, useMemo, useState, useCallback, useContext } from 'react';\r\nimport * as anchor from '@project-serum/anchor';\r\n// import './main.css'\r\nimport { useCookies } from 'react-cookie';\r\nimport FAQ from './components/faq';\r\nimport Navbar from './components/navbar.js'\r\nimport Hero from './components/hero'\r\nimport AboutUs from './components/aboutUs'\r\nimport RoadMap from './components/roadMap'\r\nimport Team from './components/team'\r\nimport Footer from './components/footer'\r\n// import Logo from './components/bouncyDiscLogo'\r\nimport styled from 'styled-components';\r\nimport { Container, Snackbar } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { useSelector } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { PublicKey, Transaction } from '@solana/web3.js';\r\nimport { useWallet } from '@solana/wallet-adapter-react';\r\nimport { WalletDialogButton } from '@solana/wallet-adapter-material-ui';\r\nimport {\r\n  awaitTransactionSignatureConfirmation,\r\n  CandyMachineAccount,\r\n  CANDY_MACHINE_PROGRAM,\r\n  getCandyMachineState,\r\n  mintOneToken,\r\n  getCollectionPDA,\r\n  SetupState,\r\n  createAccountsForMint,\r\n} from './candy-machine';\r\nimport { AlertState, toDate, formatNumber, getAtaForMint } from './utils';\r\nimport { MintCountdown } from './MintCountdown';\r\nimport { MintButton } from './MintButton';\r\nimport { GatewayProvider } from '@civic/solana-gateway-react';\r\nimport { sendTransaction } from './connection';\r\n\r\nconst ConnectButton = styled(WalletDialogButton)`\r\n  width: 100%;\r\n  height: 60px;\r\n  margin-top: 10px;\r\n  margin-bottom: 5px;\r\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\r\n  color: white;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst MintContainer = styled.div``; // add your owns styles here\r\nexport interface HomeProps {\r\n  candyMachineId?: anchor.web3.PublicKey;\r\n  connection: anchor.web3.Connection;\r\n  txTimeout: number;\r\n  rpcHost: string;\r\n}\r\n\r\nconst Home = (props: HomeProps) => {\r\n  const [cookies, setCookie] = useCookies();\r\n  const time = useSelector((state : any) => state.time.value)\r\n  const [isUserMinting, setIsUserMinting] = useState(false);\r\n  const [candyMachine, setCandyMachine] = useState<CandyMachineAccount>();\r\n  const [alertState, setAlertState] = useState<AlertState>({\r\n    open: false,\r\n    message: '',\r\n    severity: undefined,\r\n  });\r\n\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [endDate, setEndDate] = useState<Date>();\r\n  const [itemsRemaining, setItemsRemaining] = useState<number>();\r\n  const [isWhitelistUser, setIsWhitelistUser] = useState(false);\r\n  const [isPresale, setIsPresale] = useState(false);\r\n  const [discountPrice, setDiscountPrice] = useState<anchor.BN>();\r\n  const [needTxnSplit, setNeedTxnSplit] = useState(true);\r\n  const [setupTxn, setSetupTxn] = useState<SetupState>();\r\n\r\n  const rpcUrl = props.rpcHost;\r\n  const wallet = useWallet();\r\n\r\n  const anchorWallet = useMemo(() => {\r\n    if (\r\n      !wallet ||\r\n      !wallet.publicKey ||\r\n      !wallet.signAllTransactions ||\r\n      !wallet.signTransaction\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    return {\r\n      publicKey: wallet.publicKey,\r\n      signAllTransactions: wallet.signAllTransactions,\r\n      signTransaction: wallet.signTransaction,\r\n    } as anchor.Wallet;\r\n  }, [wallet]);\r\n\r\n  const refreshCandyMachineState = useCallback(async () => {\r\n    if (!anchorWallet) {\r\n      return;\r\n    }\r\n\r\n    if (props.candyMachineId) {\r\n      try {\r\n        const cndy = await getCandyMachineState(\r\n          anchorWallet,\r\n          props.candyMachineId,\r\n          props.connection,\r\n        );\r\n        let active =\r\n          cndy?.state.goLiveDate?.toNumber() < new Date().getTime() / 1000;\r\n        let presale = false;\r\n        // whitelist mint?\r\n        if (cndy?.state.whitelistMintSettings) {\r\n          // is it a presale mint?\r\n          if (\r\n            cndy.state.whitelistMintSettings.presale &&\r\n            (!cndy.state.goLiveDate ||\r\n              cndy.state.goLiveDate.toNumber() > new Date().getTime() / 1000)\r\n          ) {\r\n            presale = true;\r\n          }\r\n          // is there a discount?\r\n          if (cndy.state.whitelistMintSettings.discountPrice) {\r\n            setDiscountPrice(cndy.state.whitelistMintSettings.discountPrice);\r\n          } else {\r\n            setDiscountPrice(undefined);\r\n            // when presale=false and discountPrice=null, mint is restricted\r\n            // to whitelist users only\r\n            if (!cndy.state.whitelistMintSettings.presale) {\r\n              cndy.state.isWhitelistOnly = true;\r\n            }\r\n          }\r\n          // retrieves the whitelist token\r\n          const mint = new anchor.web3.PublicKey(\r\n            cndy.state.whitelistMintSettings.mint,\r\n          );\r\n          const token = (await getAtaForMint(mint, anchorWallet.publicKey))[0];\r\n\r\n          try {\r\n            const balance = await props.connection.getTokenAccountBalance(\r\n              token,\r\n            );\r\n            let valid = parseInt(balance.value.amount) > 0;\r\n            // only whitelist the user if the balance > 0\r\n            setIsWhitelistUser(valid);\r\n            active = (presale && valid) || active;\r\n          } catch (e) {\r\n            setIsWhitelistUser(false);\r\n            // no whitelist user, no mint\r\n            if (cndy.state.isWhitelistOnly) {\r\n              active = false;\r\n            }\r\n            console.log('There was a problem fetching whitelist token balance');\r\n            console.log(e);\r\n          }\r\n        }\r\n        // datetime to stop the mint?\r\n        if (cndy?.state.endSettings?.endSettingType.date) {\r\n          setEndDate(toDate(cndy.state.endSettings.number));\r\n          if (\r\n            cndy.state.endSettings.number.toNumber() <\r\n            new Date().getTime() / 1000\r\n          ) {\r\n            active = false;\r\n          }\r\n        }\r\n        // amount to stop the mint?\r\n        if (cndy?.state.endSettings?.endSettingType.amount) {\r\n          let limit = Math.min(\r\n            cndy.state.endSettings.number.toNumber(),\r\n            cndy.state.itemsAvailable,\r\n          );\r\n          if (cndy.state.itemsRedeemed < limit) {\r\n            setItemsRemaining(limit - cndy.state.itemsRedeemed);\r\n          } else {\r\n            setItemsRemaining(0);\r\n            cndy.state.isSoldOut = true;\r\n          }\r\n        } else {\r\n          setItemsRemaining(cndy.state.itemsRemaining);\r\n        }\r\n\r\n        if (cndy.state.isSoldOut) {\r\n          active = false;\r\n        }\r\n\r\n        const [collectionPDA] = await getCollectionPDA(props.candyMachineId);\r\n        const collectionPDAAccount =\r\n          await cndy.program.provider.connection.getAccountInfo(collectionPDA);\r\n\r\n        setIsActive((cndy.state.isActive = active));\r\n        setIsPresale((cndy.state.isPresale = presale));\r\n        setCandyMachine(cndy);\r\n\r\n        const txnEstimate =\r\n          892 +\r\n          (!!collectionPDAAccount && cndy.state.retainAuthority ? 182 : 0) +\r\n          (cndy.state.tokenMint ? 177 : 0) +\r\n          (cndy.state.whitelistMintSettings ? 33 : 0) +\r\n          (cndy.state.whitelistMintSettings?.mode?.burnEveryTime ? 145 : 0) +\r\n          (cndy.state.gatekeeper ? 33 : 0) +\r\n          (cndy.state.gatekeeper?.expireOnUse ? 66 : 0);\r\n\r\n        setNeedTxnSplit(txnEstimate > 1230);\r\n      } catch (e) {\r\n        if (e instanceof Error) {\r\n          if (e.message === `Account does not exist ${props.candyMachineId}`) {\r\n            setAlertState({\r\n              open: true,\r\n              message: `Couldn't fetch candy machine state from candy machine with address: ${props.candyMachineId}, using rpc: ${props.rpcHost}! You probably typed the REACT_APP_CANDY_MACHINE_ID value in wrong in your .env file, or you are using the wrong RPC!`,\r\n              severity: 'error',\r\n              noHide: true,\r\n            });\r\n          } else if (e.message.startsWith('failed to get info about account')) {\r\n            setAlertState({\r\n              open: true,\r\n              message: `Couldn't fetch candy machine state with rpc: ${props.rpcHost}! This probably means you have an issue with the REACT_APP_SOLANA_RPC_HOST value in your .env file, or you are not using a custom RPC!`,\r\n              severity: 'error',\r\n              noHide: true,\r\n            });\r\n          }\r\n        } else {\r\n          setAlertState({\r\n            open: true,\r\n            message: `${e}`,\r\n            severity: 'error',\r\n            noHide: true,\r\n          });\r\n        }\r\n        console.log(e);\r\n      }\r\n    } else {\r\n      setAlertState({\r\n        open: true,\r\n        message: `Your REACT_APP_CANDY_MACHINE_ID value in the .env file doesn't look right! Make sure you enter it in as plain base-58 address!`,\r\n        severity: 'error',\r\n        noHide: true,\r\n      });\r\n    }\r\n  }, [anchorWallet, props.candyMachineId, props.connection, props.rpcHost]);\r\n\r\n  const onMint = async (\r\n    beforeTransactions: Transaction[] = [],\r\n    afterTransactions: Transaction[] = [],\r\n  ) => {\r\n    try {\r\n      setIsUserMinting(true);\r\n      document.getElementById('#identity')?.click();\r\n      if (wallet.connected && candyMachine?.program && wallet.publicKey) {\r\n        let setupMint: SetupState | undefined;\r\n        if (needTxnSplit && setupTxn === undefined) {\r\n          setAlertState({\r\n            open: true,\r\n            message: 'Please sign account setup transaction',\r\n            severity: 'info',\r\n          });\r\n          setupMint = await createAccountsForMint(\r\n            candyMachine,\r\n            wallet.publicKey,\r\n          );\r\n          let status: any = { err: true };\r\n          if (setupMint.transaction) {\r\n            status = await awaitTransactionSignatureConfirmation(\r\n              setupMint.transaction,\r\n              props.txTimeout,\r\n              props.connection,\r\n              true,\r\n            );\r\n          }\r\n          if (status && !status.err) {\r\n            setSetupTxn(setupMint);\r\n            setAlertState({\r\n              open: true,\r\n              message:\r\n                'Setup transaction succeeded! Please sign minting transaction',\r\n              severity: 'info',\r\n            });\r\n          } else {\r\n            setAlertState({\r\n              open: true,\r\n              message: 'Mint failed! Please try again!',\r\n              severity: 'error',\r\n            });\r\n            setIsUserMinting(false);\r\n            return;\r\n          }\r\n        } else {\r\n          setAlertState({\r\n            open: true,\r\n            message: 'Please sign minting transaction',\r\n            severity: 'info',\r\n          });\r\n        }\r\n\r\n        let mintOne = await mintOneToken(\r\n          candyMachine,\r\n          wallet.publicKey,\r\n          beforeTransactions,\r\n          afterTransactions,\r\n          setupMint ?? setupTxn,\r\n        );\r\n        const mintTxId = mintOne[0];\r\n\r\n        let status: any = { err: true };\r\n        if (mintTxId) {\r\n          status = await awaitTransactionSignatureConfirmation(\r\n            mintTxId,\r\n            props.txTimeout,\r\n            props.connection,\r\n            true,\r\n          );\r\n        }\r\n\r\n        if (status && !status.err) {\r\n          // manual update since the refresh might not detect\r\n          // the change immediately\r\n          let remaining = itemsRemaining! - 1;\r\n          setItemsRemaining(remaining);\r\n          setIsActive((candyMachine.state.isActive = remaining > 0));\r\n          candyMachine.state.isSoldOut = remaining === 0;\r\n          setSetupTxn(undefined);\r\n          setAlertState({\r\n            open: true,\r\n            message: 'Congratulations! Mint succeeded!',\r\n            severity: 'success',\r\n          });\r\n        } else {\r\n          setAlertState({\r\n            open: true,\r\n            message: 'Mint failed! Please try again!',\r\n            severity: 'error',\r\n          });\r\n        }\r\n      }\r\n    } catch (error: any) {\r\n      let message = error.msg || 'Minting failed! Please try again!';\r\n      if (!error.msg) {\r\n        if (!error.message) {\r\n          message = 'Transaction timeout! Please try again.';\r\n        } else if (error.message.indexOf('0x137')) {\r\n          console.log(error);\r\n          message = `SOLD OUT!`;\r\n        } else if (error.message.indexOf('0x135')) {\r\n          message = `Insufficient funds to mint. Please fund your wallet.`;\r\n        }\r\n      } else {\r\n        if (error.code === 311) {\r\n          console.log(error);\r\n          message = `SOLD OUT!`;\r\n          window.location.reload();\r\n        } else if (error.code === 312) {\r\n          message = `Minting period hasn't started yet.`;\r\n        }\r\n      }\r\n\r\n      setAlertState({\r\n        open: true,\r\n        message,\r\n        severity: 'error',\r\n      });\r\n      // updates the candy machine state to reflect the latest\r\n      // information on chain\r\n      refreshCandyMachineState();\r\n    } finally {\r\n      setIsUserMinting(false);\r\n    }\r\n  };\r\n\r\n  const toggleMintButton = () => {\r\n    let active = !isActive || isPresale;\r\n\r\n    if (active) {\r\n      if (candyMachine!.state.isWhitelistOnly && !isWhitelistUser) {\r\n        active = false;\r\n      }\r\n      if (endDate && Date.now() >= endDate.getTime()) {\r\n        active = false;\r\n      }\r\n    }\r\n\r\n    if (\r\n      isPresale &&\r\n      candyMachine!.state.goLiveDate &&\r\n      candyMachine!.state.goLiveDate.toNumber() <= new Date().getTime() / 1000\r\n    ) {\r\n      setIsPresale((candyMachine!.state.isPresale = false));\r\n    }\r\n\r\n    setIsActive((candyMachine!.state.isActive = active));\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshCandyMachineState();\r\n  }, [\r\n    anchorWallet,\r\n    props.candyMachineId,\r\n    props.connection,\r\n    refreshCandyMachineState,\r\n  ]);\r\n\r\n  return (\r\n    <Container style={{ marginTop: 0 , position: \"relative\"}} className=\"w-full h-full\">\r\n      <Navbar />\r\n      {/* <Logo /> */}\r\n      <Hero />\r\n      <AboutUs />\r\n      <RoadMap />\r\n      <Team />\r\n      <FAQ />\r\n      <Footer />\r\n      <Container style={{ position: 'absolute', width:'300px'}} className={`mintButton ${cookies.time ? \"opacity-100\": \"opacity-0\"}`}>\r\n        <Paper\r\n          style={{\r\n            padding: 24,\r\n            paddingBottom: 10,\r\n            backgroundColor: '#151A1F',\r\n            borderRadius: 6,\r\n          }}\r\n        >\r\n          {!wallet.connected ? (\r\n            <ConnectButton>Connect Wallet</ConnectButton>\r\n          ) : (\r\n            <>\r\n              {candyMachine && (\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  wrap=\"nowrap\"\r\n                >\r\n                  <Grid item xs={3}>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                      Remaining\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"h6\"\r\n                      color=\"textPrimary\"\r\n                      style={{\r\n                        fontWeight: 'bold',\r\n                      }}\r\n                    >\r\n                      {`${itemsRemaining}`}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                      {isWhitelistUser && discountPrice\r\n                        ? 'Discount Price'\r\n                        : 'Price'}\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"h6\"\r\n                      color=\"textPrimary\"\r\n                      style={{ fontWeight: 'bold' }}\r\n                    >\r\n                      {isWhitelistUser && discountPrice\r\n                        ? `◎ ${formatNumber.asNumber(discountPrice)}`\r\n                        : `◎ ${formatNumber.asNumber(\r\n                            candyMachine.state.price,\r\n                          )}`}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={5}>\r\n                    {isActive && endDate && Date.now() < endDate.getTime() ? (\r\n                      <>\r\n                        <MintCountdown\r\n                          key=\"endSettings\"\r\n                          date={getCountdownDate(candyMachine)}\r\n                          style={{ justifyContent: 'flex-end' }}\r\n                          status=\"COMPLETED\"\r\n                          onComplete={toggleMintButton}\r\n                        />\r\n                        <Typography\r\n                          variant=\"caption\"\r\n                          align=\"center\"\r\n                          display=\"block\"\r\n                          style={{ fontWeight: 'bold' }}\r\n                        >\r\n                          TO END OF MINT\r\n                        </Typography>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <MintCountdown\r\n                          key=\"goLive\"\r\n                          date={getCountdownDate(candyMachine)}\r\n                          style={{ justifyContent: 'flex-end' }}\r\n                          status={\r\n                            candyMachine?.state?.isSoldOut ||\r\n                            (endDate && Date.now() > endDate.getTime())\r\n                              ? 'COMPLETED'\r\n                              : isPresale\r\n                              ? 'PRESALE'\r\n                              : 'LIVE'\r\n                          }\r\n                          onComplete={toggleMintButton}\r\n                        />\r\n                        {isPresale &&\r\n                          candyMachine.state.goLiveDate &&\r\n                          candyMachine.state.goLiveDate.toNumber() >\r\n                            new Date().getTime() / 1000 && (\r\n                            <Typography\r\n                              variant=\"caption\"\r\n                              align=\"center\"\r\n                              display=\"block\"\r\n                              style={{ fontWeight: 'bold' }}\r\n                            >\r\n                              UNTIL PUBLIC MINT\r\n                            </Typography>\r\n                          )}\r\n                      </>\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n              <MintContainer>\r\n                {candyMachine?.state.isActive &&\r\n                candyMachine?.state.gatekeeper &&\r\n                wallet.publicKey &&\r\n                wallet.signTransaction ? (\r\n                  <GatewayProvider\r\n                    wallet={{\r\n                      publicKey:\r\n                        wallet.publicKey ||\r\n                        new PublicKey(CANDY_MACHINE_PROGRAM),\r\n                      //@ts-ignore\r\n                      signTransaction: wallet.signTransaction,\r\n                    }}\r\n                    gatekeeperNetwork={\r\n                      candyMachine?.state?.gatekeeper?.gatekeeperNetwork\r\n                    }\r\n                    clusterUrl={rpcUrl}\r\n                    handleTransaction={async (transaction: Transaction) => {\r\n                      setIsUserMinting(true);\r\n                      const userMustSign = transaction.signatures.find(sig =>\r\n                        sig.publicKey.equals(wallet.publicKey!),\r\n                      );\r\n                      if (userMustSign) {\r\n                        setAlertState({\r\n                          open: true,\r\n                          message: 'Please sign one-time Civic Pass issuance',\r\n                          severity: 'info',\r\n                        });\r\n                        try {\r\n                          transaction = await wallet.signTransaction!(\r\n                            transaction,\r\n                          );\r\n                        } catch (e) {\r\n                          setAlertState({\r\n                            open: true,\r\n                            message: 'User cancelled signing',\r\n                            severity: 'error',\r\n                          });\r\n                          // setTimeout(() => window.location.reload(), 2000);\r\n                          setIsUserMinting(false);\r\n                          throw e;\r\n                        }\r\n                      } else {\r\n                        setAlertState({\r\n                          open: true,\r\n                          message: 'Refreshing Civic Pass',\r\n                          severity: 'info',\r\n                        });\r\n                      }\r\n                      try {\r\n                        await sendTransaction(\r\n                          props.connection,\r\n                          wallet,\r\n                          transaction,\r\n                          [],\r\n                          true,\r\n                          'confirmed',\r\n                        );\r\n                        setAlertState({\r\n                          open: true,\r\n                          message: 'Please sign minting',\r\n                          severity: 'info',\r\n                        });\r\n                      } catch (e) {\r\n                        setAlertState({\r\n                          open: true,\r\n                          message:\r\n                            'Solana dropped the transaction, please try again',\r\n                          severity: 'warning',\r\n                        });\r\n                        console.error(e);\r\n                        // setTimeout(() => window.location.reload(), 2000);\r\n                        setIsUserMinting(false);\r\n                        throw e;\r\n                      }\r\n                      await onMint();\r\n                    }}\r\n                    broadcastTransaction={false}\r\n                    options={{ autoShowModal: false }}\r\n                  >\r\n                    <MintButton\r\n                      candyMachine={candyMachine}\r\n                      isMinting={isUserMinting}\r\n                      setIsMinting={val => setIsUserMinting(val)}\r\n                      onMint={onMint}\r\n                      isActive={isActive || (isPresale && isWhitelistUser)}\r\n                    />\r\n                  </GatewayProvider>\r\n                ) : (\r\n                  <MintButton\r\n                    candyMachine={candyMachine}\r\n                    isMinting={isUserMinting}\r\n                    setIsMinting={val => setIsUserMinting(val)}\r\n                    onMint={onMint}\r\n                    isActive={isActive || (isPresale && isWhitelistUser)}\r\n                  />\r\n                )}\r\n              </MintContainer>\r\n            </>\r\n          )}\r\n          <Typography\r\n            variant=\"caption\"\r\n            align=\"center\"\r\n            display=\"block\"\r\n            style={{ marginTop: 7, color: 'grey' }}\r\n          >\r\n            Powered by METAPLEX\r\n          </Typography>\r\n\t</Paper>\r\n      </Container>\r\n\r\n      <Snackbar\r\n        open={alertState.open}\r\n        autoHideDuration={alertState.noHide ? null : 6000}\r\n        onClose={() => setAlertState({ ...alertState, open: false })}\r\n      >\r\n        <Alert\r\n          onClose={() => setAlertState({ ...alertState, open: false })}\r\n          severity={alertState.severity}\r\n        >\r\n          {alertState.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Container>\r\n\r\n  );\r\n};\r\n\r\nconst getCountdownDate = (\r\n  candyMachine: CandyMachineAccount,\r\n): Date | undefined => {\r\n  if (\r\n    candyMachine.state.isActive &&\r\n    candyMachine.state.endSettings?.endSettingType.date\r\n  ) {\r\n    return toDate(candyMachine.state.endSettings.number);\r\n  }\r\n\r\n  return toDate(\r\n    candyMachine.state.goLiveDate\r\n      ? candyMachine.state.goLiveDate\r\n      : candyMachine.state.isPresale\r\n      ? new anchor.BN(new Date().getTime() / 1000)\r\n      : undefined,\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\candy-machine.ts",[],"C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\utils.ts",[],"C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\MintCountdown.tsx",[],"C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\MintButton.tsx",[],"C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\components\\navbar.js",["94","95","96","97","98","99","100","101"],"import { useState } from 'react';\r\n// import Link from 'next/link'\r\n// import Image from 'next/image'\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport MapIcon from '@mui/icons-material/Map';\r\nimport GroupsIcon from '@mui/icons-material/Groups';\r\nimport ForumIcon from '@mui/icons-material/Forum';\r\nimport HelpCenterIcon from '@mui/icons-material/HelpCenter';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { Link as ScrollLink } from \"react-scroll\";\r\nimport Stryker from '../assets/Stryker.png';\r\nimport AboutUs from './aboutUs';\r\n\r\nconst NavBar = () => {\r\n    const [open, setOpen] = useState(true)\r\n\r\n    const handleClick = () => {\r\n        setOpen(!open)\r\n    }\r\n\r\n    return (\r\n        <nav className={`transition-all duration-700 ${open ? \"bg-transparent\" : \"bg-black\"}`}>\r\n            <div className=\" mx-auto flex justify-between items-center mx-12\">\r\n                {/* Logo */}\r\n\r\n                <div className=\"relative top-2 ml-10\">\r\n                    <img src={Stryker} className=\"w-[150px] h-[100px]\" />\r\n                </div>\r\n\r\n                {/* Hamburger Menu */}\r\n                {/* To do: Make the contents visible when clicked */}\r\n                <a className=\"text-white p-[1px] sm:block md:hidden display-none mr-10\">\r\n                    {open ? <MenuIcon onClick={handleClick} /> : <CloseIcon onClick={handleClick} />}\r\n                </a>\r\n\r\n                {/* Hyperlinks */}\r\n                {/* To do: Change font */}\r\n                <div className={`font-['Helvetica'] flex items-center md:flex-row flex-col justify-center bg-black md:bg-transparent md:static absolute md:z-auto z-[1]  left-0 w-full md:w-auto md:pl-0 pl-9 transition-all duration-700 ease-in ${!open ? 'top-[100px] opacity-100' : 'top-[-490px] md:opacity-100 opacity-0 z-[-1]'}`}>\r\n                    <ScrollLink activeClass='nav-active' to={\"aboutus\"} smooth={true} duration={300} offset={-50}><a className=\"font-['Atmospheric'] lg:px-3 md:px-1 py-2 text-white font-[700] hover:text-orange-300 hover:underline md:text-[13px] lg:text-[18px] flex gap-1 items-center transition duration-300 ease-in-out hover:-translate-y-1 hover:scale-110 hover:cursor-pointer\">About Us <InfoIcon className=\"w-4 h-4 \" /> </a></ScrollLink>\r\n                    <ScrollLink activeClass='nav-active' to={\"map\"} smooth={true} duration={300} offset={-50}><a className=\"font-['Atmospheric'] lg:px-3 md:px-1 py-2 text-white font-[700] hover:text-orange-300 hover:underline md:text-[13px] lg:text-[18px] flex gap-1 items-center transition duration-300 ease-in-out hover:-translate-y-1 hover:scale-110 hover:cursor-pointer\">Fox Map <MapIcon className=\"w-4 h-4\" /></a></ScrollLink>\r\n                    <ScrollLink activeClass='nav-active' to={\"team\"} smooth={true} duration={300} offset={-50}><a className=\"font-['Atmospheric'] lg:px-3 md:px-1 py-2 text-white font-[700] hover:text-orange-300 hover:underline md:text-[13px] lg:text-[18px] flex gap-1 items-center transition duration-300 ease-in-out hover:-translate-y-1 hover:scale-110 hover:cursor-pointer\">Team <GroupsIcon className=\"w-4 h-4\" /></a></ScrollLink>\r\n                    <ScrollLink activeClass='nav-active' to={\"faq\"} smooth={true} duration={300} offset={-50}><a className=\"font-['Atmospheric'] lg:px-3 md:px-1 py-2 text-white font-[700] hover:text-orange-300 hover:underline md:text-[13px] lg:text-[18px] flex gap-1 items-center transition duration-300 ease-in-out hover:-translate-y-1 hover:scale-110 hover:cursor-pointer\">FAQ <HelpCenterIcon className=\"w-4 h-4\" /></a></ScrollLink>\r\n                    <ScrollLink activeClass='nav-active' to={\"footer\"} smooth={true} duration={300} offset={-50}><a className=\"font-['Atmospheric'] lg:px-3 md:px-1 py-2 text-white font-[700] hover:text-orange-300 hover:underline md:text-[13px] lg:text-[18px] flex gap-1 items-center transition duration-300 ease-in-out hover:-translate-y-1 hover:scale-110 hover:cursor-pointer\">Community <ForumIcon className=\"w-4 h-4\" /></a></ScrollLink>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default NavBar;",["102","103"],"C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\components\\team.js",["104","105"],"// import Image from 'next/image'\r\nimport NichoFox from '../assets/FancyFoxAKing.png';\r\nimport Nicho from '../assets/nicho.png'\r\nimport DennisFox from '../assets/FancyFoxAPIRATE.png';\r\nimport Dennis from '../assets/den.png';\r\nimport Monique from '../assets/monique.png';\r\nimport MoniqueFox from '../assets/chef_NFT_yellow_bg.png';\r\nimport FabioFox from '../assets/astronaut_NFT_galaxy_bg.png';\r\nimport Fabio from '../assets/fabio.png';\r\nimport JocelynFox from '../assets/raincoat_bird_pink_bg.png';\r\nimport Jocelyn from '../assets/joce.png';\r\nimport MattFox from '../assets/karatenew.png';\r\nimport Matt from '../assets/mat.png';\r\nimport CalvinFox from '../assets/police_NFT_purp_bg.png';\r\nimport Calvin from '../assets/calvin.png';\r\nimport JarrenFox from '../assets/santa_green_bg.png';\r\nimport Jarren from '../assets/jar.png';\r\nimport DanielFox from '../assets/VikingNew.png'\r\nimport Daniel from '../assets/dan.png';\r\n\r\nconst members = [\r\n    {\r\n        image: NichoFox,\r\n        image2: Nicho,\r\n        name: \"Nicholas Liubern\",\r\n        position: \"Founder\",\r\n        link:\"https://www.instagram.com/nicholasliubern/\",\r\n    },\r\n    {\r\n        image: DennisFox,\r\n        image2: Dennis,\r\n        name: \"Dennis Rubianto\",\r\n        position: \"Co-Founder\",\r\n        link:\"https://www.instagram.com/dennisrubianto7/\",\r\n    },\r\n    {\r\n        image: MoniqueFox,\r\n        image2: Monique,\r\n        name: \"Monique Senjaya\",\r\n        position: \"System Developer\",\r\n        link:\"https://www.linkedin.com/in/monique-senjaya-06a33115a/\",\r\n    },\r\n    {\r\n        image: FabioFox,\r\n        image2: Fabio,\r\n        name: \"Fabio Espinoza\",\r\n        position: \"System Developer\",\r\n        link:\"https://www.linkedin.com/in/fabio-espinoza-bb616211b\",\r\n    },\r\n    {\r\n        image: JocelynFox,\r\n        image2: Jocelyn,\r\n        name: \"Jocelyn Liusharon\",\r\n        position: \"Graphic Artist\",\r\n        link:\"https://www.instagram.com/joceliu_/\",\r\n    },\r\n    {\r\n        // wizard\r\n        image: CalvinFox,\r\n        image2: Calvin,\r\n        name: \"Calvin Halim\",\r\n        position: \"Graphic Artist\",\r\n        link:\"https://www.instagram.com/clv27_/\",\r\n    },\r\n    {\r\n        image: MattFox,\r\n        image2: Matt,\r\n        name: \"Matthew Sutanto\",\r\n        position: \"Social Media Manager\",\r\n        link:\"https://www.instagram.com/tjanmatthew/\",\r\n    },\r\n    {\r\n        image: JarrenFox,\r\n        image2: Jarren,\r\n        name: \"Jarren Erniody\",\r\n        position: \"Community Manager\",\r\n        link:\"https://www.instagram.com/f3stivepyro/\",\r\n    },\r\n    {\r\n        image: DanielFox,\r\n        image2: Daniel,\r\n        name: \"Daniel Kurniawan\",\r\n        position: \"Community Manager\",\r\n        link:\"https://www.instagram.com/daniel.dk2505/\",\r\n    },\r\n]\r\n\r\n\r\nconst Team = () => {\r\n    return (\r\n        <>\r\n            <div id=\"team\" className=\"flex flex-col mx-10 md:my-5 justify-center items-center\">\r\n                {/* FFA FAMILY */}\r\n                <div className=\"flex flex-col justify-center mt-20\">\r\n                    <h3 className=\"text-5xl font-['Atmospheric'] text-white\"><span className=\"text-orange-500 font-bold\">FFA</span> FAMILY</h3>\r\n                    <h5 className='text-center'>*Click to know more about us!</h5>\r\n                </div>\r\n\r\n                {/* MEMBERS */}\r\n                <div className=\"flex flex-wrap m-10 w-full justify-center my-[70px] relative \">\r\n                    {members.map((member) => {\r\n                        return (\r\n\r\n                            <div key={member.name} className=\"mx-10 md:mb-10 items-center py-10 md:my-0 my-5\">\r\n                                {/* Image */}\r\n                                <div className='relative mb-[80px]'>\r\n                                    <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-[150px] h-[150px]\">\r\n                                        <img className=\"rounded-full hover:opacity-0 active:opacity-0 animation:fade transition-all duration-300\" src={member.image} layout={\"fill\"} />\r\n                                    </div>\r\n                                    <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-[150px] h-[150px]\">\r\n                                        <img className=\"rounded-full opacity-0 hover:opacity-100 active:opacity-100 animation:fade transition-all duration-300\" src={member.image2} layout={\"fill\"} />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <a href={member.link} target=\"_blank\" rel=\"noreferrer\"><div className=\"bg-orange-700 border-orange-600 rounded px-3\">\r\n                                    {/* Name */}\r\n                                    <h3 className=\"font-bold text-[20px] text-center\">{member.name}</h3>\r\n                                    {/* Position */}\r\n                                    <h3 className=\"text-center\">{member.position}</h3>\r\n                                </div>\r\n                                </a>\r\n                            </div>\r\n\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Team;","C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\components\\aboutUs.js",["106","107","108"],"// import Image from 'next/image'\r\nimport ReactTypingEffect from 'react-typing-effect';\r\nimport FoxGif from '../assets/fox.gif';\r\nimport Big from '../assets/big.png';\r\nimport Small from '../assets/smol.png';\r\nconst AboutUs = () => {\r\n    return (\r\n        <>\r\n            <div id=\"aboutus\" className=\"flex flex-col justify-between items-center\">\r\n                {/* GIF */}\r\n               \r\n                    <div className='md:w-[350px] md:h-[350px] w-[200px] h-[200px] relative mb-10'>\r\n                        <img src={FoxGif} layout='fill' objectFit='contain' />\r\n                    </div>  \r\n\r\n                {/* SPAN */}\r\n                {/* <div className='py-7 mx-8 h-full relative lg:right-5 md:block hidden'> <span className='w-2 h-full bg-white block rounded-lg'> </span></div> */}\r\n\r\n                {/* ABOUT */}\r\n                <div className=\"flex flex-col justify-between items-center h-[500px] mb-20\">\r\n                    <div className=\"hidden md:block\">\r\n                    <img src={Big} className='w-[1400] h-[550px]' />\r\n                    </div>\r\n                    <div className=\" block md:hidden\">\r\n                    <img src={Small} className='w-[390px] h-[460px] block md:hidden'/>\r\n                    </div>\r\n                    <div className='my-6 absolute flex flex-col items-center lg:mt-20 mt-10 pt-5 xxxxxxl:px-[4000px] xxxxxl:px-[3000px] xxxxl:px-[2000px] xxxl:px-[1200px] x2l:px-[550px] x3l:px-[1000px] xl:px-[300px] lg:px-[200px] md:px-[130px] sm:px-[100px] px-5'>\r\n                        <ReactTypingEffect\r\n                            text={[\"D' Origin\"]}\r\n                            speed={100}\r\n                            eraseSpeed={200}\r\n                            eraseDelay={4000}\r\n                            className=\"text-3xl w-[75%] text-center text-black lg:mt-0 md:mt-5 md:text-4xl lg:text-4xl xl:text-6xl font-['Atmospheric']\"\r\n                        />\r\n                        <p className=\"mt-5 w-[75%] text-black text-sm xl:text-xl lg:text-base md:text-base sm:text-xs text-center \">9,189 foxes were forced to migrate into Uznanium forest due to a tragic wildfire caused by lightning that struck their habitat. A stray of luminous light blinded them, evolving each and every one of them into a herd of fancy foxes with human-like abilities. They started building and maintaining their own ecosystem – their own association to rule the world. Be one of the foxies to tame them before they eat you alive!</p>\r\n                    </div>\r\n                </div>\r\n                    \r\n            </div>\r\n            {/* Big Numbers */}\r\n            {/* <div className='relative flex justify-around md:mt-[150px] mt-[50px]'>\r\n                <h1 className='text-[1.8rem] md:text-8xl'>9</h1>\r\n                <h1 className='text-[1.8rem] md:text-8xl'>1</h1>\r\n                <h1 className='text-[1.8rem] md:text-8xl'>8</h1>\r\n                <h1 className='text-[1.8rem] md:text-8xl'>9</h1>\r\n            </div>\r\n            <div className='relative flex justify-around md:mb-[150px] mb-[50px]'>\r\n                <h1 className='basis-1/4 text-center text-[0.6rem] md:text-3xl md:px-3 px-1'>Represents Trust, stability and luck</h1>\r\n                <h1 className='basis-1/4 text-center text-[0.6rem] md:text-3xl md:px-3 px-1'>We aim to be the number 1 NFT Collection in the world by proving ourselves that we can.</h1>\r\n                <h1 className='basis-1/4 text-center text-[0.6rem] md:text-3xl md:px-3 px-1'>Symbolizes infinity, meaning that there are no limits to what we can be and to be everlasting.</h1>\r\n                <h1 className='basis-1/4 text-center text-[0.6rem] md:text-3xl md:px-3 px-1'>The biggest single digit number, showing that we are going to be the biggest NFT Community.\r\n</h1>\r\n            </div> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AboutUs;","C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\components\\roadMap.js",[],"C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\components\\faq.js",["109","110","111","112"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport Faq from \"react-faq-component\";\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\n\r\n\r\nconst FAQ = () => {\r\n    const data = {\r\n        title: \"Frequently Asked Questions\",\r\n        rows: [\r\n            {\r\n                title: \"How many Fancy Foxes will be available to be tamed?\",\r\n                content: `9189 Fancy Foxes will be minted for the public. It’s only batch 1, we are planning to make this a long run project, and benefits our holders more and more.`,\r\n            },\r\n            {\r\n                title: \"What Blockchain will the Fancy Foxes be minted on?\",\r\n                content:\r\n                    \"The Solana Blockchain.\",\r\n            },\r\n            {\r\n                title: \"When are we able to tame our Fancy Foxes?\",\r\n                content: `We are able to tame our Fancy Foxes at June 1st, 2022. Time will be announced in our Discord\r\n                `,\r\n            },\r\n            {\r\n                title: \"Where can I view my NFT?\",\r\n                content:\r\n                    \"Once minted, you can view it in your wallet and you’ll just need to login into your account in Solsea, Solanart or MagicEden to view your NFT.\",\r\n            },\r\n            {\r\n                title: \"Will there be a pre-sale?\",\r\n                content:\r\n                    \"Yes, there will be presale for whitelisted members. This will take place a few days before the public mint.\",\r\n            },\r\n            {\r\n                title: \"How can we tame our Fancy Foxes?\",\r\n                content:\r\n                    <p>Firstly, you can tame your Fancy Foxes at our website and you will need a wallet that is compatible with the Solana Blockchain, such as; Phantom Wallet, Solflare, Sollet, Coin98 and many more. For tutorials, we will post it in our <a className=\"text-orange-600 underline\" href=\"https://discord.gg/dp35RvcscG\">DISCORD</a></p>,\r\n            },\r\n        ],\r\n        styles: {\r\n            titleTextColor: 'orange',\r\n            titleTextSize: '40px',\r\n            rowTitleColor: 'white',\r\n            bgColor: 'transparent',\r\n            rowTitleTextSize: '25px',\r\n            rowContentColor: 'white',\r\n            rowContentTextSize: '15px',\r\n            // rowContentPaddingTop: '10px',\r\n            rowContentPaddingBottom: '10px',\r\n            // rowContentPaddingLeft: '50px',\r\n            rowContentPaddingRight: '100px',\r\n            arrowColor: \"orange\",\r\n            transitionDuration: \"0.5s\",\r\n            timingFunc: \"ease-in-out\",\r\n            bgColor: \"rgba(0,0,0,0.5)\",\r\n        }\r\n    };\r\n\r\n    const config = {\r\n        animate: true,\r\n        arrowIcon: <KeyboardArrowDownIcon />,\r\n        // tabFocus: true\r\n    };\r\n\r\n    return (\r\n        <div className=\"relative inline-block mb-10 w-[100%] flex justify-center\">\r\n            <div id=\"faq\" className=\"h-[550px] mb-10 px-10 flex items-center text-[10px]\">\r\n                <Faq data={data} config={config} styles={data.styles} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FAQ;","C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\components\\hero.js",["113","114","115","116","117","118","119","120","121"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\r\nimport CardMembershipIcon from '@mui/icons-material/CardMembership';\r\nimport NFT from \"../assets/NFT.png\"\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { timeAction } from '../reducers/time'\r\nimport {useCookies } from 'react-cookie'\r\nconst change = () => ({ mintTime: true })\r\n\r\nconst Hero = () => {\r\n    const [cookies, setCookies, removeCookies] = useCookies(false);\r\n    const dispatch = useDispatch();\r\n    const time = useSelector((state) => state.time.value)\r\n    const [mintTime, setMintTime] = useState(false)\r\n    const [days, setDays] = useState(0)\r\n    const [hours, setHours] = useState(0)\r\n    const [minutes, setMinutes] = useState(0)\r\n    const [seconds, setSeconds] = useState(0)\r\n\r\n    useEffect(() => {\r\n        const target = new Date(\"6/01/2022 00:00:00\")\r\n        const interval = setInterval(() => {\r\n            const now = new Date()\r\n            const difference = target.getTime() - now.getTime()\r\n\r\n            const d = Math.floor(difference / (1000 * 60 * 60 * 24))\r\n            setDays(d)\r\n            const h = Math.floor(\r\n                (difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n            );\r\n            setHours(h)\r\n            const m = Math.floor(\r\n                (difference % (1000 * 60 * 60)) / (1000 * 60)\r\n            );\r\n            setMinutes(m)\r\n            const s = Math.floor(\r\n                (difference % (1000 * 60)) / 1000);\r\n            setSeconds(s)\r\n\r\n            if (d <= 0 && h <= 0 && m <= 0 && s <= m) {\r\n                setMintTime(true)\r\n\r\n            }\r\n        }, 1000)\r\n\r\n        if(mintTime) {\r\n            setCookies('time', true, { path: '/' })\r\n            // dispatch(timeAction({mintTime : true}))\r\n        } else {\r\n            removeCookies('time')\r\n        }\r\n\r\n        return () => clearInterval(interval)\r\n    }, [mintTime])\r\n    return (\r\n        <div>\r\n\r\n            <div className={`mx-12 ${cookies.time ? 'md:h-[470px]' : `md:h-[550px]`} h-[500px] flex-col w-full lg:justify-between justify-center`}>\r\n                {/* Welcome text */}\r\n                <div className=\"lg:flex lg:flex-row justify-around items-center mt-10 w-full\">\r\n                    <div>\r\n                        <h1 className=\"lg:text-[90px] md:text-[80px] text-[35px] font-bold font-['Atmospheric'] text-shadow text-white\">FANCY FOX</h1>\r\n                        <h1 className=\"lg:text-[90px] md:text-[80px] text-[35px] font-bold font-['Atmospheric'] md:bottom-8 bottom-4 relative text-shadow text-white\">ASSOCIATION</h1>\r\n                    </div>\r\n                    {/* Connect wallet button */}\r\n                    <div className=\"h-[150px] flex-col text-center -translate-x-8\">\r\n                        <h1 className='text-white md:invisible lg:visible visible'>As Seen On</h1>\r\n                        <img src={NFT} alt=\"nft\" height={100} width={100} className=\"invert mx-auto\" />\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n                {mintTime ? (\r\n                    <h1></h1>\r\n                ) : (\r\n                    <>\r\n                        <div className='h-[400px] w-[100%] md:flex md:flex-col justify-center items-center  md:bottom-20 relative'>\r\n                            <div className=\"lg:text-[50px] md:text-[40px] text-[22px] font-['Source Sans Pro'] font-[600] text-white font-['Atmospheric']\">MINT COUNTDOWN</div>\r\n                            <div className=\"flex relative\">\r\n                                <div className=\"bg-orange-700 text-white md:px-4 px-2 py-2 rounded border-2 border-orange-600 text-center lg:text-[45px] md:text-[25px] text-[20px] md:font-[900] font-[600] lg:min-w-[120px] md:min-w-[80px] min-w-[60px] mx-1\">{days} <span className=\"block text-[10px] font-[500]\">Days</span></div>\r\n                                <div className=\"bg-orange-700 text-white md:px-4 px-2 py-2 rounded border-2 border-orange-600 text-center lg:text-[45px] md:text-[25px] text-[20px] md:font-[900] font-[600] lg:min-w-[120px] md:min-w-[80px] min-w-[60px] mx-1\">{hours} <span className=\"block text-[10px] font-[500]\">Hours</span></div>\r\n                                <div className=\"bg-orange-700 text-white md:px-4 px-2 py-2 rounded border-2 border-orange-600 text-center lg:text-[45px] md:text-[25px] text-[20px] md:font-[900] font-[600] lg:min-w-[120px] md:min-w-[80px] min-w-[60px] mx-1\">{minutes} <span className=\"block text-[10px] font-[500]\">Minutes</span></div>\r\n                                <div className=\"bg-orange-700 text-white md:px-4 px-2 py-2 rounded border-2 border-orange-600 text-center lg:text-[45px] md:text-[25px] text-[20px] md:font-[900] font-[600] lg:min-w-[120px] md:min-w-[80px] min-w-[60px] mx-1\">{seconds} <span className=\"block text-[10px] font-[500]\">Seconds</span></div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Hero;\r\n","C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\components\\footer.js",["122","123","124","125","126","127","128","129","130","131","132","133","134","135"],"import React, { useState, useEffect } from 'react';\r\nimport imageUrlBuilder from '@sanity/image-url'\r\nimport InstagramIcon from '@mui/icons-material/Instagram';\r\nimport TwitterIcon from '@mui/icons-material/Twitter';\r\nimport TelegramIcon from '@mui/icons-material/Telegram';\r\nimport FacebookIcon from '@mui/icons-material/Facebook';\r\nimport YouTubeIcon from '@mui/icons-material/YouTube';\r\n// import Image from 'next/image';\r\nimport sanityClient from \"./sanityClient\"\r\n\r\nconst imageBuilder = imageUrlBuilder(sanityClient)\r\n\r\nconst url = (source) => {\r\n    return imageBuilder.image(source)\r\n}\r\n\r\nconst Footer = () => {\r\n    const [icons, setIcons] = useState([])\r\n    \r\n    const mediumBP = 768;\r\n\r\n    const getIcons = async () => {\r\n        try {\r\n            const res = await sanityClient.fetch(`*[_type == \"icon\"]`)\r\n            setIcons(res)\r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getIcons();\r\n    }, [])\r\n\r\n    return (\r\n        <div id=\"footer\" className=\"h-[300px] py-20 relative\">\r\n            <div className=\"text-4xl mx-10 md:text-left text-center\">\r\n                <h1 className=\"font-['Atmospheric'] uppercase text-white\">JOIN <span className=\"text-orange-600\">FFA</span> COMMUNITY</h1>\r\n            </div>\r\n         \r\n            <div className=\"flex flex-wrap justify-center sm:mt-10\">\r\n                {/* Instagram */}\r\n                <a href=\"https://twitter.com/fancyfoxassoc\" target=\"_blank\" rel=\"noreferrer\" className=\"mx-7 \"><img src={url(\"image-e2530da647045095041acad666f21a1c696933a3-2267x2267-png\")} className=\"relative md:h-12 md:w-12 h-8 w-8 md:top-1\" /></a>\r\n                {/* Twitter */}\r\n                <a href=\"https://www.instagram.com/fancyfoxassociation/\" target=\"_blank\" rel=\"noreferrer\" className=\"mx-7 \"><img src={url(\"image-c1277af875e43f79a396598c973215bcb755addc-466x460-png\")} className=\"relative md:h-12 md:w-12 h-8 w-8 md:top-1\" /></a>\r\n                {/* Telegram */}\r\n                <a href=\"https://t.me/+cypOc8aptmhlNWQ1\" target=\"_blank\" rel=\"noreferrer\" className=\"mx-7 \"><img src={url(\"image-92d9553736f96b2687bf7accd37fc2c35ce8e4a7-1000x1000-png\")} className=\"md:top-2 relative md:h-12 md:w-12 h-8 w-8\" /></a>\r\n                {/* Facebook */}\r\n                <a href=\"https://m.facebook.com/fancyfoxassociation/\" target=\"_blank\" rel=\"noreferrer\" className=\"mx-7 \"><img src={url(\"image-f4f855ccd759db4443555fd53c791210d46d5674-3244x3245-png\")} className=\"md:top-2 relative md:h-12 md:w-12 h-8 w-8\" /></a>\r\n                {/* Youtube */}\r\n                <a href=\"https://www.youtube.com/channel/UCeH7M3bIrCgtOiithGmnPsw\" target=\"_blank\" rel=\"noreferrer\" className=\"mx-7 \"><img src={url(\"image-712c0d48683b5a9cf3f2e7cbf5ee0070dc9cdd11-1000x1000-png\")} className=\"relative md:h-12 md:w-12 md:top-2 h-8 w-8\" /></a>\r\n                {/* Discord */}\r\n                <a href=\"https://discord.gg/FfaMD5fnvn\" target=\"_blank\" rel=\"noreferrer\" className=\"mx-7 \"><img src={url(\"image-bda5a76fc8424b02f9a1bccf464a785faec12dfe-512x512-png\")} className=\"md:top-2 relative md:h-12 md:w-12 h-8 w-8\" /></a>\r\n                {/* TikTok */}\r\n                <a href=\"https://www.tiktok.com/@fancyfoxassociation\" target=\"_blank\" rel=\"noreferrer\" className={`mx-7 relative top-2`}><img src={url(\"image-dc28938d89c8fe567a60c41c594f583c6e6743a7-490x488-png\")} className=\"relative md:h-12 md:w-12 h-8 w-8 bottom-2 md:bottom-0\" /></a>\r\n            </div>\r\n\r\n            <div className=\"mt-5 flex justify-end mx-5\">\r\n                <h3 className=\"hidden\">email</h3>\r\n            </div>\r\n            <div className=\"mx-10 text-white\">\r\n                <h1>Copyright © 2022 Fancy Fox Association</h1>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Footer;\r\n","C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\components\\sanityClient.js",[],"C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\components\\bouncyDiscLogo.js",["136"],"import React from 'react'\r\nimport imageUrlBuilder from '@sanity/image-url'\r\nimport sanityClient from \"./sanityClient\"\r\n\r\nconst imageBuilder = imageUrlBuilder(sanityClient)\r\n\r\nconst url = (source) => {\r\n    return imageBuilder.image(source)\r\n}\r\n\r\nfunction bouncyDiscLogo() {\r\n    return (\r\n        <div className='sticky animate-bounce z-[100] top-0'>\r\n            <a href=\"https://discord.gg/FfaMD5fnvn\" target=\"_blank\" rel=\"noreferrer\"><img src={url(\"image-bda5a76fc8424b02f9a1bccf464a785faec12dfe-512x512-png\")}  height={50} width={50} className=\"sticky md:h-14 md:w-14 h-14 w-14 bg-black p-2 rounded-full hover:cursor-pointer top-0\" /></a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default bouncyDiscLogo",["137","138"],"C:\\Users\\espin\\Desktop\\Computer Science\\ffa-candymachine-migration\\js\\packages\\candy-machine-ui\\src\\reducers\\time.js",[],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":1,"column":53,"nodeType":"145","messageId":"146","endLine":1,"endColumn":63},{"ruleId":"143","severity":1,"message":"147","line":59,"column":19,"nodeType":"145","messageId":"146","endLine":59,"endColumn":28},{"ruleId":"143","severity":1,"message":"148","line":60,"column":9,"nodeType":"145","messageId":"146","endLine":60,"endColumn":13},{"ruleId":"149","severity":1,"message":"150","line":13,"column":8,"nodeType":"145","messageId":"146","endLine":13,"endColumn":15},{"ruleId":"151","severity":1,"message":"152","line":28,"column":21,"nodeType":"153","endLine":28,"endColumn":74},{"ruleId":"154","severity":1,"message":"155","line":33,"column":17,"nodeType":"153","endLine":33,"endColumn":89},{"ruleId":"154","severity":1,"message":"155","line":40,"column":115,"nodeType":"153","endLine":40,"endColumn":380},{"ruleId":"154","severity":1,"message":"155","line":41,"column":111,"nodeType":"153","endLine":41,"endColumn":376},{"ruleId":"154","severity":1,"message":"155","line":42,"column":112,"nodeType":"153","endLine":42,"endColumn":377},{"ruleId":"154","severity":1,"message":"155","line":43,"column":111,"nodeType":"153","endLine":43,"endColumn":376},{"ruleId":"154","severity":1,"message":"155","line":44,"column":114,"nodeType":"153","endLine":44,"endColumn":379},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"151","severity":1,"message":"152","line":108,"column":41,"nodeType":"153","endLine":108,"endColumn":184},{"ruleId":"151","severity":1,"message":"152","line":111,"column":41,"nodeType":"153","endLine":111,"endColumn":199},{"ruleId":"151","severity":1,"message":"152","line":13,"column":25,"nodeType":"153","endLine":13,"endColumn":79},{"ruleId":"151","severity":1,"message":"152","line":22,"column":21,"nodeType":"153","endLine":22,"endColumn":69},{"ruleId":"151","severity":1,"message":"152","line":25,"column":21,"nodeType":"153","endLine":25,"endColumn":87},{"ruleId":"149","severity":1,"message":"156","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":26},{"ruleId":"149","severity":1,"message":"157","line":1,"column":28,"nodeType":"145","messageId":"146","endLine":1,"endColumn":34},{"ruleId":"149","severity":1,"message":"158","line":1,"column":36,"nodeType":"145","messageId":"146","endLine":1,"endColumn":44},{"ruleId":"159","severity":1,"message":"160","line":55,"column":13,"nodeType":"161","messageId":"162","endLine":55,"endColumn":20},{"ruleId":"149","severity":1,"message":"144","line":1,"column":38,"nodeType":"145","messageId":"146","endLine":1,"endColumn":48},{"ruleId":"149","severity":1,"message":"163","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":32},{"ruleId":"149","severity":1,"message":"164","line":3,"column":8,"nodeType":"145","messageId":"146","endLine":3,"endColumn":26},{"ruleId":"149","severity":1,"message":"165","line":6,"column":10,"nodeType":"145","messageId":"146","endLine":6,"endColumn":20},{"ruleId":"149","severity":1,"message":"166","line":8,"column":7,"nodeType":"145","messageId":"146","endLine":8,"endColumn":13},{"ruleId":"149","severity":1,"message":"167","line":12,"column":11,"nodeType":"145","messageId":"146","endLine":12,"endColumn":19},{"ruleId":"149","severity":1,"message":"148","line":13,"column":11,"nodeType":"145","messageId":"146","endLine":13,"endColumn":15},{"ruleId":"168","severity":1,"message":"169","line":54,"column":8,"nodeType":"170","endLine":54,"endColumn":18,"suggestions":"171"},{"ruleId":"172","severity":1,"message":"173","line":77,"column":21,"nodeType":"153","endLine":77,"endColumn":25},{"ruleId":"149","severity":1,"message":"174","line":3,"column":8,"nodeType":"145","messageId":"146","endLine":3,"endColumn":21},{"ruleId":"149","severity":1,"message":"175","line":4,"column":8,"nodeType":"145","messageId":"146","endLine":4,"endColumn":19},{"ruleId":"149","severity":1,"message":"176","line":5,"column":8,"nodeType":"145","messageId":"146","endLine":5,"endColumn":20},{"ruleId":"149","severity":1,"message":"177","line":6,"column":8,"nodeType":"145","messageId":"146","endLine":6,"endColumn":20},{"ruleId":"149","severity":1,"message":"178","line":7,"column":8,"nodeType":"145","messageId":"146","endLine":7,"endColumn":19},{"ruleId":"149","severity":1,"message":"179","line":18,"column":12,"nodeType":"145","messageId":"146","endLine":18,"endColumn":17},{"ruleId":"149","severity":1,"message":"180","line":20,"column":11,"nodeType":"145","messageId":"146","endLine":20,"endColumn":19},{"ruleId":"151","severity":1,"message":"152","line":44,"column":112,"nodeType":"153","endLine":44,"endColumn":247},{"ruleId":"151","severity":1,"message":"152","line":46,"column":125,"nodeType":"153","endLine":46,"endColumn":258},{"ruleId":"151","severity":1,"message":"152","line":48,"column":109,"nodeType":"153","endLine":48,"endColumn":244},{"ruleId":"151","severity":1,"message":"152","line":50,"column":122,"nodeType":"153","endLine":50,"endColumn":257},{"ruleId":"151","severity":1,"message":"152","line":52,"column":135,"nodeType":"153","endLine":52,"endColumn":270},{"ruleId":"151","severity":1,"message":"152","line":54,"column":108,"nodeType":"153","endLine":54,"endColumn":241},{"ruleId":"151","severity":1,"message":"152","line":56,"column":138,"nodeType":"153","endLine":56,"endColumn":283},{"ruleId":"151","severity":1,"message":"152","line":14,"column":86,"nodeType":"153","endLine":14,"endColumn":287},{"ruleId":"139","replacedBy":"181"},{"ruleId":"141","replacedBy":"182"},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"@typescript-eslint/no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'setCookie' is assigned a value but never used.","'time' is assigned a value but never used.","no-unused-vars","'AboutUs' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'useEffect' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","no-dupe-keys","Duplicate key 'bgColor'.","ObjectExpression","unexpected","'AccountBalanceWalletIcon' is defined but never used.","'CardMembershipIcon' is defined but never used.","'timeAction' is defined but never used.","'change' is assigned a value but never used.","'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'removeCookies' and 'setCookies'. Either include them or remove the dependency array.","ArrayExpression",["185"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'InstagramIcon' is defined but never used.","'TwitterIcon' is defined but never used.","'TelegramIcon' is defined but never used.","'FacebookIcon' is defined but never used.","'YouTubeIcon' is defined but never used.","'icons' is assigned a value but never used.","'mediumBP' is assigned a value but never used.",["183"],["184"],"no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},"Update the dependencies array to be: [mintTime, removeCookies, setCookies]",{"range":"188","text":"189"},[1974,1984],"[mintTime, removeCookies, setCookies]"]